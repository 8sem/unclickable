name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main  # Runs on push to the 'main' branch
    deploy:
      needs: build-and-push  # Runs after build-and-push job
      runs-on: ubuntu-latest
      steps:
        - name: Install kubectl & ngrok
          run: |
            # Install kubectl
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
            
            # Install ngrok
            curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
            echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
            sudo apt update && sudo apt install ngrok
            
        - name: Start ngrok tunnel
          run: |
            ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
            nohup ngrok http 8001 > ngrok.log 2>&1 &
  
        - name: Wait for ngrok to be ready and Fetch URL
          run: |
            sleep 10
            curl -s http://127.0.0.1:4040/api/tunnels > tunnels.json
            export NGROK_URL=$(jq -r '.tunnels[0].public_url' tunnels.json)
            echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
  
        - name: Configure kubectl to Use ngrok Tunnel
          run: |
            echo "${{ secrets.KUBECONFIG_DATA }}" > kubeconfig.yaml
            export KUBECONFIG=$(pwd)/kubeconfig.yaml
            
            # Modify kubeconfig to use ngrok tunnel
            sed -i "s|server: .*|server: ${{ env.NGROK_URL }}|" kubeconfig.yaml
            
            # Disable certificate verification for ngrok
            kubectl config set-cluster minikube --server=${{ env.NGROK_URL }} --insecure-skip-tls-verify=true
  
        - name: Debug Kubernetes API Server
          run: |
            export KUBECONFIG=$(pwd)/kubeconfig.yaml
            kubectl cluster-info
  
        - name: Restart Minikube if Needed
          run: |
            minikube stop || true
            minikube start --driver=docker
            minikube status
  
        - name: Deploy to Minikube via ngrok
          run: |
            export KUBECONFIG=$(pwd)/kubeconfig.yaml
            
            # Verify kubeconfig is correctly configured
            kubectl config view
            
            # Deploy application
            kubectl create deployment click-app --image=${{ secrets.DOCKER_USERNAME }}/click-app:latest || \
            kubectl set image deployment/click-app click-app=${{ secrets.DOCKER_USERNAME }}/click-app:latest
            
            kubectl expose deployment click-app --type=NodePort --port=5000
          
          kubectl get services
          
      - name: Show ngrok URL
        run: echo "App is available at ${{ env.NGROK_URL }}"
